import { b as b$1 } from './chunk-45JH5YAD.js';
import { c } from './chunk-BE5ABZLV.js';

var v=e=>e==null||Object.keys(e).length===0,m=e=>Number.isInteger(e)&&e>=0,O=(e,r)=>{let t=new Headers(e);if(r instanceof Headers)r.forEach((s,i)=>{t.append(i,s);});else if(typeof r=="object")for(let[s,i]of Object.entries(r))t.append(s,i);return t},g=e=>/^[!#$%&'*+\-.^_`|~0-9a-zA-Z]+$/.test(e.trim()),A=e=>typeof e=="object"&&e!==null&&Object.keys(e).every(r=>typeof r=="string"&&g(r)&&typeof e[r]=="string"||Array.isArray(e[r])),h=e=>e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(r,t,s)=>t.toUpperCase()+s),b=e=>e===!1||e==null?e:Array.isArray(e)?e.map(b):String(e),j=e=>Object.fromEntries(Object.entries(e).map(([r,t])=>[h(r),b(t)])),P=(e,r)=>{if(A(r)){let t=j(r);Object.assign(e,{...t});}else throw new TypeError("Invalid headers. Please provide valid headers.")},E={method:!0,headers:!0,body:!0,mode:!0,credentials:!0,cache:!0,redirect:!0,referrer:!0,referrerPolicy:!0,integrity:!0,keepalive:!0,signal:!0,window:!0,dispatcher:!0,duplex:!0},q=e=>{let r={};for(let[t,s]of Object.entries(e))E[t]&&(r[t]=s);return r},$=(e,r,t)=>{let s=new Set,i=/^[a-zA-Z][a-zA-Z0-9_]*$/,o=(r.match(/:[a-zA-Z0-9_]+/g)||[]).map(n=>n.slice(1)),l=new Set(o);for(let n in t)if(Object.prototype.hasOwnProperty.call(t,n)){let a=String(n);if(!i.test(a))throw new Error(`Invalid parameter name: "${a}". It must start with a letter and can only contain letters, numbers, and underscores.`);if(s.has(a)||l.size!==o.length)throw new Error(`Found duplicated params with name "${a}" or path "${r}". Only the last one will be available.`);s.add(a),r=r.replace(`:${a}`,encodeURIComponent(String(t[n])));}return e?`${e}${r}`:r},H=(e,r,t)=>{let s=e.url?`${e.url}/`.replace(/\/+$/,"/"):void 0,i=r.path.replace(/^\//,""),o=r.params?new URL($(s,i,r.params)):new URL(i,s),l=new AbortController,n=new Headers({...e?.headers});r.headers&&(n=O(n,r.headers)),r?.json&&(r.body=JSON.stringify(r.json),n.append("Content-Type","application/json; charset=UTF-8"),delete r.json),r?.qs&&(o.search=b$1.stringify(r.qs,e?.qs)),delete r.qs;let a=Number.MAX_SAFE_INTEGER;if(typeof e.timeout=="number"&&e.timeout>a)throw new RangeError(`The \`timeout\` option cannot be greater than ${a}`);e.timeout=r.timeout??e.timeout??1e4;let w={retries:3,retryDelay:1e3,retryOn:[408,413,429,500,502,503,504]};e.retryConfig=e.retryConfig||{},e.retryConfig=Object.assign(w,e.retryConfig);let{retry:d}=r;if(d){let{retries:p,retryDelay:u,retryOn:c$1}=d;if(p!==void 0)if(m(p))e.retryConfig.retries=p;else throw new c("retries must be a positive integer");if(u!==void 0)if(m(u)||typeof u=="function")e.retryConfig.retryDelay=u;else throw new c("retryDelay must be a positive integer or a function returning a positive integer");if(c$1)if(Array.isArray(c$1)||typeof c$1=="function")e.retryConfig.retryOn=c$1;else throw new c("retryOn property expects an array or function")}if(r.signal){if(!(r.signal instanceof AbortSignal))throw new TypeError(typeof r.signal+" received for signal, but expected an AbortSignal");let p=r.signal;r.signal.addEventListener("abort",()=>{l.abort(p.reason);});}return r.signal=l.signal,{...e,...r,method:t.toLocaleUpperCase(),url:o,headers:n,timeout:r.timeout||e.timeout,signal:r.signal,abortController:l}};

export { v as a, m as b, O as c, j as d, P as e, q as f, H as g };
